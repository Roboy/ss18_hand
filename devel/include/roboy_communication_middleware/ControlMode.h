// Generated by gencpp from file roboy_communication_middleware/ControlMode.msg
// DO NOT EDIT!


#ifndef ROBOY_COMMUNICATION_MIDDLEWARE_MESSAGE_CONTROLMODE_H
#define ROBOY_COMMUNICATION_MIDDLEWARE_MESSAGE_CONTROLMODE_H

#include <ros/service_traits.h>


#include <roboy_communication_middleware/ControlModeRequest.h>
#include <roboy_communication_middleware/ControlModeResponse.h>


namespace roboy_communication_middleware
{

struct ControlMode
{

typedef ControlModeRequest Request;
typedef ControlModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ControlMode
} // namespace roboy_communication_middleware


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roboy_communication_middleware::ControlMode > {
  static const char* value()
  {
    return "f4a9008e9e32a87b9ee7b89f4816168f";
  }

  static const char* value(const ::roboy_communication_middleware::ControlMode&) { return value(); }
};

template<>
struct DataType< ::roboy_communication_middleware::ControlMode > {
  static const char* value()
  {
    return "roboy_communication_middleware/ControlMode";
  }

  static const char* value(const ::roboy_communication_middleware::ControlMode&) { return value(); }
};


// service_traits::MD5Sum< ::roboy_communication_middleware::ControlModeRequest> should match 
// service_traits::MD5Sum< ::roboy_communication_middleware::ControlMode > 
template<>
struct MD5Sum< ::roboy_communication_middleware::ControlModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roboy_communication_middleware::ControlMode >::value();
  }
  static const char* value(const ::roboy_communication_middleware::ControlModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roboy_communication_middleware::ControlModeRequest> should match 
// service_traits::DataType< ::roboy_communication_middleware::ControlMode > 
template<>
struct DataType< ::roboy_communication_middleware::ControlModeRequest>
{
  static const char* value()
  {
    return DataType< ::roboy_communication_middleware::ControlMode >::value();
  }
  static const char* value(const ::roboy_communication_middleware::ControlModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roboy_communication_middleware::ControlModeResponse> should match 
// service_traits::MD5Sum< ::roboy_communication_middleware::ControlMode > 
template<>
struct MD5Sum< ::roboy_communication_middleware::ControlModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roboy_communication_middleware::ControlMode >::value();
  }
  static const char* value(const ::roboy_communication_middleware::ControlModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roboy_communication_middleware::ControlModeResponse> should match 
// service_traits::DataType< ::roboy_communication_middleware::ControlMode > 
template<>
struct DataType< ::roboy_communication_middleware::ControlModeResponse>
{
  static const char* value()
  {
    return DataType< ::roboy_communication_middleware::ControlMode >::value();
  }
  static const char* value(const ::roboy_communication_middleware::ControlModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOY_COMMUNICATION_MIDDLEWARE_MESSAGE_CONTROLMODE_H
